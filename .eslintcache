[{"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js":"1","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js":"2","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js":"3","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx":"4","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx":"5","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx":"6","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx":"7","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx":"8","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx":"9","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx":"10","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx":"11","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx":"12"},{"size":500,"mtime":1616690801172,"results":"13","hashOfConfig":"14"},{"size":112,"mtime":1616690801152,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1616690801172,"results":"16","hashOfConfig":"14"},{"size":396,"mtime":1617296002477,"results":"17","hashOfConfig":"14"},{"size":1924,"mtime":1618545672446,"results":"18","hashOfConfig":"14"},{"size":1892,"mtime":1618589481268,"results":"19","hashOfConfig":"14"},{"size":52,"mtime":1616932686648,"results":"20","hashOfConfig":"14"},{"size":2092,"mtime":1618763458508,"results":"21","hashOfConfig":"14"},{"size":5056,"mtime":1616932676532,"results":"22","hashOfConfig":"14"},{"size":2135,"mtime":1618240440606,"results":"23","hashOfConfig":"14"},{"size":497,"mtime":1617413813230,"results":"24","hashOfConfig":"14"},{"size":2741,"mtime":1618588650598,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1isydb1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js",[],["52","53"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx",["54"],"import React, {  useState } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Switch,\n  FormControlLabel, Button\n} from \"@material-ui/core\";\n\nexport default function InputTodoList() {\n  const [completed, setCompleted] = React.useState({\n    checkedB: false,\n  });\n  const [state, setState] = useState({\n    userId: null,\n    toDoListId: null,\n    titleToDoList: null,\n    completed : []\n   \n  });\n  const handleChangeCompleted = (event) => {\n    setCompleted({ ...completed, [event.target.name]: event.target.checked });\n  };\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n  const handleSubmit = async (data) => {\n    data.preventDefault();\n    // history.push(\"/list-support\");\n\n    try {\n      let form = { ...state };\n      // console.log(\"form\", form);\n      const response = await fetch(\n        process.env.REACT_APP_URL,\n        {\n          method: \"POST\",\n          // headers: {\n          //   \"Content-Type\": \"application/json\",\n          //   Authorization: localStorage.getItem(\"token\"),\n          // },\n          body: JSON.stringify(form),\n        }\n      );\n      const res = await response.json();\n      // console.log(\"res>>\", res);\n      setState({\n        userId: \"\",\n        toDoListId: \"\",\n        titleToDoList: \"\",\n        completed : []\n\n      });\n      alert(\"success\", res.status);\n    } catch (err) {\n      alert(\"error\", err.message);\n    }\n  };\n  return (\n    <div className=\"root\">\n      <Paper className=\"paper\">\n        <h3 className=\"title\">INPUT TODO LIST</h3>\n        <form onSubmit={handleSubmit}>\n\n        <TextField\n          id=\"user-id\"\n          className=\"textField\"\n          label=\"User ID\"\n          variant=\"outlined\"\n          name =\"userId\"\n          value={state.userId}\n        />\n        <TextField\n          id=\"todolist-id\"\n          className=\"textField\"\n          label=\"Todolist ID\"\n          variant=\"outlined\"\n          name =\"toDoListId\"\n          value={state.toDoListId}\n        />\n        <TextField\n          id=\"title-todolist\"\n          className=\"textField\"\n          label=\"Title Todolist\"\n          variant=\"outlined\"\n          name =\"titleToDoList\"\n          value={state.titleToDoList}\n\n        />\n        <h3 className=\"status\">Status :</h3>\n        <FormControlLabel\n             className=\"switch\"\n          control={\n            <Switch\n\n              checked={state.checkedB}\n              onChange={handleChangeCompleted}\n              name=\"checkedB\"\n              value={completed.checkedB}\n              color=\"primary\"\n            />\n          }\n          label=\"Completed\"\n        />\n        <Button type=\"submit\" className=\"button\" >Input Data</Button>\n     </form>\n      </Paper>\n    </div>\n  );\n}\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":23,"column":9,"nodeType":"61","messageId":"62","endLine":23,"endColumn":21},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]