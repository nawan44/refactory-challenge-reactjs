[{"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js":"1","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js":"2","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js":"3","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx":"4","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx":"5","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx":"6","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx":"7","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx":"8","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx":"9","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx":"10","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx":"11","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx":"12"},{"size":500,"mtime":1616690801172,"results":"13","hashOfConfig":"14"},{"size":112,"mtime":1616690801152,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1616690801172,"results":"16","hashOfConfig":"14"},{"size":396,"mtime":1617296002477,"results":"17","hashOfConfig":"14"},{"size":2815,"mtime":1617012279472,"results":"18","hashOfConfig":"14"},{"size":2368,"mtime":1616998265597,"results":"19","hashOfConfig":"14"},{"size":52,"mtime":1616932686648,"results":"20","hashOfConfig":"14"},{"size":2309,"mtime":1617333509044,"results":"21","hashOfConfig":"14"},{"size":5056,"mtime":1616932676532,"results":"22","hashOfConfig":"14"},{"size":1565,"mtime":1617296383315,"results":"23","hashOfConfig":"14"},{"size":497,"mtime":1617413813230,"results":"24","hashOfConfig":"14"},{"size":3596,"mtime":1617553706624,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1isydb1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js",[],["53","54"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx",["55"],"import {\n  makeStyles,\n  TableHead,\n  Table,\n  Paper,\n  TableCell,\n  TableRow, TableBody\n} from \"@material-ui/core\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    // backgroundColor: \"red\",\n    textAlign:\"center\",\n    margin:\"0 auto\"\n  },\n  paper:{\n    textAlign:\"center\",\n    margin:\"0 auto\",\n    width:\"800px\",\n  },\n  title: {\n    fontSize:\"20px\",\n    padding:\"20px 0\"\n  },\n  head:{\n    fontSize:\"16px\",\n  }\n});\n\nexport default function User() {\n  const classes = useStyles();\n  const [user, setUser] = useState([]);\n// console.log(user)\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n      setUser(res.data);\n    });\n  });\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <h3 className={classes.title}>DATA USER</h3>\n        <Table>\n          <TableHead>\n            <TableRow>\n            <TableCell  className={classes.head}>ID</TableCell>\n              \n              <TableCell  className={classes.head}>Name</TableCell>\n              <TableCell  className={classes.head}>Username</TableCell>\n              <TableCell  className={classes.head}>Email</TableCell>\n              <TableCell  className={classes.head}>Address</TableCell>\n              <TableCell  className={classes.head}>Phone</TableCell>\n              {/* <TableCell  className={classes.head}>Website</TableCell> */}\n              {/* <TableCell  className={classes.head}>Company</TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {user.map(item => (\n            <TableRow>\n              <TableCell>{item.id}</TableCell>\n              \n              <TableCell>{item.name}</TableCell>\n              <TableCell>{item.username}</TableCell>\n              <TableCell>{item.email}</TableCell>\n              <TableCell>{item.address.street}{\" \"+item.address.suite+\" \"}{item.address.city}</TableCell>\n              <TableCell>{item.phone}</TableCell>\n              {/* <TableCell>{item.website}</TableCell> */}\n              {/* <TableCell>{item.company.name}{\" \"+item.company.catchPhrase+\" \"}{item.company.bs}</TableCell> */}\n            </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx",["56"],"import {\n  makeStyles,\n  TableHead,\n  Table,\n  Paper,\n  TableCell,\n  TableRow, TableBody, FormControlLabel, Switch, Button\n} from \"@material-ui/core\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    textAlign:\"center\",\n    margin:\"0 auto\"\n  },\n  paper:{\n    textAlign:\"center\",\n    margin:\"0 auto\",\n    width:\"800px\",\n  },\n  title: {\n    fontSize:\"20px\",\n    padding:\"20px 0\"\n  },\n  head:{\n    fontSize:\"16px\",\n  }\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const [todo, setTodo] = useState([]);\n  const [state, setState] = React.useState({\n    checkedB: true,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n// console.log(user)\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(res => {\n      setTodo(res.data);\n    });\n  });\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <h3 className={classes.title}>TODO LIST</h3>\n        <Button  color=\"primary\"className={classes.title} href=\"input-todo-list\">add TODO LIST</Button>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n            <TableCell  className={classes.head}>User Id</TableCell>           \n              <TableCell  className={classes.head}>Id</TableCell>\n              <TableCell  className={classes.head}>Title</TableCell>\n              <TableCell  className={classes.head}>Completed</TableCell>   \n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {todo.map(item => (\n            <TableRow>\n              <TableCell>{item.userId}</TableCell>\n              <TableCell>{item.id}</TableCell>\n              <TableCell>{item.title}</TableCell>\n              <TableCell>\n              <FormControlLabel\n        control={\n          <Switch\n            checked={item.completed}\n            onChange={handleChange}\n            name=\"checkedB\"\n            value={state.checkedB}\n            color=\"primary\"\n          />\n        }\n        label=\"Completed\"\n      />\n              </TableCell>\n            </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":18,"column":5,"nodeType":"66","messageId":"67","endLine":18,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":17,"column":5,"nodeType":"66","messageId":"67","endLine":17,"endColumn":11},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":14,"column":5,"nodeType":"66","messageId":"67","endLine":14,"endColumn":11},{"ruleId":"68","severity":1,"message":"72","line":67,"column":9,"nodeType":"70","messageId":"71","endLine":67,"endColumn":21},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]