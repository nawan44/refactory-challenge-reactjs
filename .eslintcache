[{"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js":"1","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js":"2","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js":"3","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx":"4","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx":"5","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Todolist/index.jsx":"6","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx":"7","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx":"8","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx":"9","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx":"10","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx":"11","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx":"12"},{"size":500,"mtime":1616690801172,"results":"13","hashOfConfig":"14"},{"size":112,"mtime":1616690801152,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1616690801172,"results":"16","hashOfConfig":"14"},{"size":537,"mtime":1616690801168,"results":"17","hashOfConfig":"14"},{"size":333,"mtime":1616915035620,"results":"18","hashOfConfig":"14"},{"size":97,"mtime":1612285021868,"results":"19","hashOfConfig":"14"},{"size":2008,"mtime":1616915277698,"results":"20","hashOfConfig":"14"},{"size":195,"mtime":1616914883586,"results":"21","hashOfConfig":"14"},{"size":299,"mtime":1616858870924,"results":"22","hashOfConfig":"14"},{"size":5648,"mtime":1616913659410,"results":"23","hashOfConfig":"14"},{"size":1400,"mtime":1616913752915,"results":"24","hashOfConfig":"14"},{"size":477,"mtime":1616915106899,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ckpd1d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/index.js",[],["54","55"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/App.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/reportWebVitals.js",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Router/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Artikel/index.jsx",["56"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Todolist/index.jsx",[],["57","58"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/User/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/index.jsx",["59"],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx",["60"],"import { createStyles, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root:{\n    width:\"100%\",\n    margin: \"50px 0 0 0 \",\n  },\n})\n\nexport default function Home() {\n  const classes = useStyles()\n  return <div className={classes.root}>Home</div>;\n}","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/index.jsx",["61"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import Footer from \"../Layout/Footer\"\nimport {\n  Home,\n  Person,\n  Assignment,\n  ChevronLeft,\n  ChevronRight,\n  Menu,\n} from \"@material-ui/icons\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    width:\"100%\",\n    float:\"left\",\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\nconst dataMenu = [\n  {\n    path: \"/\",\n    text: \"Home\",\n    icon: <Home />,\n    // role: \"admin\"\n  },\n  {\n    path: \"/user\",\n    text: \"User\",\n    // role: [\"prod\", \"admin\"],\n    icon: <Person />,\n  },\n\n  {\n    path: \"/article\",\n    text: \"Article\",\n    // role: [\"supp\", \"admin\"],\n    icon: <Assignment />,\n  },\n];\nexport default function PersistentDrawerLeft(props) {\n  let location = useLocation();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Refactory ReactJs Challenge{\" \"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        onClick={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {/* {['Home', 'User', 'Article',].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 3 === 0 ? <Home /> : <Person /> }</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))} */}\n\n          {dataMenu.map((row, index, r) => {\n            return (\n              <NavLink\n                to={row.path}\n                key={index}\n                className={classes.sidebarTitle}\n              >\n                <ListItem\n                  button\n                  key={index}\n                  className={classes.listItem}\n                  selected={location.pathname === row.path}\n                >\n                  <ListItemIcon className={classes.icon}>\n                    {row.icon}\n                  </ListItemIcon>\n                  <ListItemText primary={row.text} />\n                </ListItem>\n              </NavLink>\n            );\n          })}\n        </List>\n        <Divider />\n        {/* <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n\n      </main>\n\n    </div>\n  );\n}\n","/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Main/index.jsx",[],"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Component/Layout/Footer/index.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":22},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":22},{"ruleId":"66","severity":1,"message":"73","line":21,"column":32,"nodeType":"68","messageId":"69","endLine":21,"endColumn":42},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar",["74"],["75"],"'Footer' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]