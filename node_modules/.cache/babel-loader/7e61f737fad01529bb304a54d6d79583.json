{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, Paper, TextField, Switch, FormControlLabel, Button } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    textAlign: \"center\",\n    margin: \"0 auto\"\n  },\n  paper: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n    width: \"800px\",\n    padding: \"20px\",\n    marginTop: \"70px\",\n    marginBottom: \"50px\"\n  },\n  title: {\n    fontSize: \"20px\",\n    padding: \"20px 0\"\n  },\n  head: {\n    fontSize: \"16px\"\n  },\n  textField: {\n    width: \"90%\",\n    margin: \"10px\"\n  },\n  button: {\n    width: \"90%\",\n    backgroundColor: \"#3F51B5\",\n    margin: \"70px 0 30px 0\",\n    color: \"#fff\",\n    padding: \"10px 0\"\n  },\n  status: {\n    textAlign: \"left\",\n    margin: \"20px 0 0 40px\"\n  },\n  switch: {\n    float: \"left\",\n    margin: \"10px 0 0 40px\"\n  }\n});\nexport default function InputTodoList() {\n  _s();\n\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState({\n    checkedB: false\n  });\n  const [state, setState] = useState({\n    userId: null,\n    toDoListId: null,\n    titleToDoList: null,\n    completed: []\n  });\n\n  const handleChangeCompleted = event => {\n    setCompleted({ ...completed,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = async data => {\n    data.preventDefault(); // history.push(\"/list-support\");\n\n    try {\n      let form = { ...state\n      }; // console.log(\"form\", form);\n\n      const response = await fetch(process.env.REACT_APP_URL + \"/api/supp/data\", {\n        method: \"POST\",\n        // headers: {\n        //   \"Content-Type\": \"application/json\",\n        //   Authorization: localStorage.getItem(\"token\"),\n        // },\n        body: JSON.stringify(form)\n      });\n      const res = await response.json(); // console.log(\"res>>\", res);\n\n      setState({\n        userId: \"\",\n        toDoListId: \"\",\n        titleToDoList: \"\",\n        completed: []\n      });\n      alert(\"success\", res.status);\n    } catch (err) {\n      alert(\"error\", err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.title,\n        children: \"INPUT TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"user-id\",\n          className: classes.textField,\n          label: \"User ID\",\n          variant: \"outlined\",\n          name: \"userId\",\n          value: state.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"todolist-id\",\n          className: classes.textField,\n          label: \"Todolist ID\",\n          variant: \"outlined\",\n          name: \"toDoListId\",\n          value: state.toDoListId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"title-todolist\",\n          className: classes.textField,\n          label: \"Title Todolist\",\n          variant: \"outlined\",\n          name: \"titleToDoList\",\n          value: state.titleToDoList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.status,\n          children: \"Status :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          className: classes.switch,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: state.checkedB,\n            onChange: handleChangeCompleted,\n            name: \"checkedB\",\n            value: completed.checkedB,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this),\n          label: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Input Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputTodoList, \"bS7IOAzL1nEip+BexlUgDFL5MkM=\", false, function () {\n  return [useStyles];\n});\n\n_c = InputTodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodoList\");","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx"],"names":["React","useEffect","useState","makeStyles","Paper","TextField","Switch","FormControlLabel","Button","useStyles","root","width","margin","textAlign","paper","padding","marginTop","marginBottom","title","fontSize","head","textField","button","backgroundColor","color","status","switch","float","InputTodoList","classes","completed","setCompleted","checkedB","state","setState","userId","toDoListId","titleToDoList","handleChangeCompleted","event","target","name","checked","handleChange","value","handleSubmit","data","preventDefault","form","response","fetch","process","env","REACT_APP_URL","method","body","JSON","stringify","res","json","alert","err","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  TextField,\n  Switch,\n  FormControlLabel, Button\n} from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    textAlign: \"center\",\n    margin: \"0 auto\",\n  },\n  paper: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n    width: \"800px\",\n    padding:\"20px\",\n    marginTop:\"70px\",\n    marginBottom:\"50px\"\n  },\n  title: {\n    fontSize: \"20px\",\n    padding: \"20px 0\",\n  },\n  head: {\n    fontSize: \"16px\",\n  },\n  textField :{\n    width : \"90%\",\n    margin: \"10px\"\n  },\n  button:{\n    width:\"90%\",\n    backgroundColor:\"#3F51B5\",\n    margin: \"70px 0 30px 0\",\n    color:\"#fff\",\n    padding:\"10px 0\"\n  },\n  status:{\n    textAlign:\"left\",\n    margin : \"20px 0 0 40px\"\n  },\n  switch:{\n    float:\"left\",\n    margin : \"10px 0 0 40px\"\n\n  }\n});\nexport default function InputTodoList() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState({\n    checkedB: false,\n  });\n  const [state, setState] = useState({\n    userId: null,\n    toDoListId: null,\n    titleToDoList: null,\n    completed : []\n   \n  });\n  const handleChangeCompleted = (event) => {\n    setCompleted({ ...completed, [event.target.name]: event.target.checked });\n  };\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n  const handleSubmit = async (data) => {\n    data.preventDefault();\n    // history.push(\"/list-support\");\n\n    try {\n      let form = { ...state };\n      // console.log(\"form\", form);\n      const response = await fetch(\n        process.env.REACT_APP_URL + \"/api/supp/data\",\n        {\n          method: \"POST\",\n          // headers: {\n          //   \"Content-Type\": \"application/json\",\n          //   Authorization: localStorage.getItem(\"token\"),\n          // },\n          body: JSON.stringify(form),\n        }\n      );\n      const res = await response.json();\n      // console.log(\"res>>\", res);\n      setState({\n        userId: \"\",\n        toDoListId: \"\",\n        titleToDoList: \"\",\n        completed : []\n\n      });\n      alert(\"success\", res.status);\n    } catch (err) {\n      alert(\"error\", err.message);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <h3 className={classes.title}>INPUT TODO LIST</h3>\n        <form onSubmit={handleSubmit}>\n\n        <TextField\n          id=\"user-id\"\n          className={classes.textField}\n          label=\"User ID\"\n          variant=\"outlined\"\n          name =\"userId\"\n          value={state.userId}\n        />\n        <TextField\n          id=\"todolist-id\"\n          className={classes.textField}\n          label=\"Todolist ID\"\n          variant=\"outlined\"\n          name =\"toDoListId\"\n          value={state.toDoListId}\n        />\n        <TextField\n          id=\"title-todolist\"\n          className={classes.textField}\n          label=\"Title Todolist\"\n          variant=\"outlined\"\n          name =\"titleToDoList\"\n          value={state.titleToDoList}\n\n        />\n        <h3 className={classes.status}>Status :</h3>\n        <FormControlLabel\n            className={classes.switch}\n          control={\n            <Switch\n\n              checked={state.checkedB}\n              onChange={handleChangeCompleted}\n              name=\"checkedB\"\n              value={completed.checkedB}\n              color=\"primary\"\n            />\n          }\n          label=\"Completed\"\n        />\n        <Button type=\"submit\" className={classes.button} >Input Data</Button>\n     </form>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}