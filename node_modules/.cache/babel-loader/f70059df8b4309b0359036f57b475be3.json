{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, Paper, TextField, Switch, FormControlLabel, Button } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    textAlign: \"center\",\n    margin: \"0 auto\"\n  },\n  paper: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n    width: \"800px\",\n    padding: \"20px\"\n  },\n  title: {\n    fontSize: \"20px\",\n    padding: \"20px 0\"\n  },\n  head: {\n    fontSize: \"16px\"\n  },\n  textField: {\n    width: \"90%\",\n    margin: \"10px\"\n  },\n  button: {\n    width: \"90%\",\n    backgroundColor: \"#3F51B5\",\n    margin: \"30px 0\"\n  },\n  status: {\n    textAlign: \"left\",\n    margin: \"10px 0 0 40px\"\n  }\n});\nexport default function InputTodoList() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.title,\n        children: \"INPUT TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"user-id\",\n        className: classes.textField,\n        label: \"User ID\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"todolist-id\",\n        className: classes.textField,\n        label: \"Todolist ID\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"title-todolist\",\n        className: classes.textField,\n        label: \"Title Todolist\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.status,\n        children: \"Status :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: state.checkedB,\n          onChange: handleChange,\n          name: \"checkedB\",\n          value: state.checkedB,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this),\n        label: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        children: \"Input Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputTodoList, \"3mggfETbKroctw5rQrv4tKPgU90=\", false, function () {\n  return [useStyles];\n});\n\n_c = InputTodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodoList\");","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/InputTodoList/index.jsx"],"names":["React","makeStyles","Paper","TextField","Switch","FormControlLabel","Button","useStyles","root","width","margin","textAlign","paper","padding","title","fontSize","head","textField","button","backgroundColor","status","InputTodoList","classes","state","setState","useState","checkedB","handleChange","event","target","name","checked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  TextField,\n  Switch,\n  FormControlLabel, Button\n} from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    margin: \"100px 0 0 0 \",\n    textAlign: \"center\",\n    margin: \"0 auto\",\n  },\n  paper: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n    width: \"800px\",\n    padding:\"20px\"\n  },\n  title: {\n    fontSize: \"20px\",\n    padding: \"20px 0\",\n  },\n  head: {\n    fontSize: \"16px\",\n  },\n  textField :{\n    width : \"90%\",\n    margin: \"10px\"\n  },\n  button:{\n    width:\"90%\",\n    backgroundColor:\"#3F51B5\",\n    margin: \"30px 0\"\n  },\n  status:{\n    textAlign:\"left\",\n    margin : \"10px 0 0 40px\"\n  }\n});\nexport default function InputTodoList() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedB: true,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <h3 className={classes.title}>INPUT TODO LIST</h3>\n        <TextField\n          id=\"user-id\"\n          className={classes.textField}\n          label=\"User ID\"\n          variant=\"outlined\"\n        />\n        <TextField\n          id=\"todolist-id\"\n          className={classes.textField}\n          label=\"Todolist ID\"\n          variant=\"outlined\"\n        />\n        <TextField\n          id=\"title-todolist\"\n          className={classes.textField}\n          label=\"Title Todolist\"\n          variant=\"outlined\"\n        />\n        <h3 className={classes.status}>Status :</h3>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.checkedB}\n              onChange={handleChange}\n              name=\"checkedB\"\n              value={state.checkedB}\n              color=\"primary\"\n            />\n          }\n          label=\"Completed\"\n        />\n        <Button className={classes.button} >Input Data</Button>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}