{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { TableHead, Table, Paper, TableCell, TableRow, TableBody, FormControlLabel, Switch, Button } from \"@material-ui/core\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nexport default function Home() {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [state, setState] = React.useState({\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  }; // console.log(user)\n\n\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(res => {\n      setTodo(res.data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        className: \"button\",\n        href: \"input-todo-list\",\n        children: \"add TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"head\",\n              children: \"User Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"head\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"head\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"head\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: todo.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: item.completed,\n                  onChange: handleChange,\n                  name: \"checkedB\",\n                  value: state.checkedB,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 11\n                }, this),\n                label: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"Fgi0yaaJxtvA2IgQKcGirWDa2qI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/refactory-challenge-reactjs/src/Page/Home/index.jsx"],"names":["TableHead","Table","Paper","TableCell","TableRow","TableBody","FormControlLabel","Switch","Button","Axios","React","useEffect","useState","Home","todo","setTodo","state","setState","checkedB","handleChange","event","target","name","checked","get","then","res","data","map","item","userId","id","title","completed"],"mappings":"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","sourcesContent":["import {\n  TableHead,\n  Table,\n  Paper,\n  TableCell,\n  TableRow, TableBody, FormControlLabel, Switch, Button\n} from \"@material-ui/core\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\n\n\nexport default function Home() {\n  const [todo, setTodo] = useState([]);\n  const [state, setState] = React.useState({\n    checkedB: true,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n// console.log(user)\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(res => {\n      setTodo(res.data);\n    });\n  });\n  return (\n    <div className=\"root\">\n      <Paper className=\"paper\">\n        <h3 className=\"title\">TODO LIST</h3>\n        <Button  color=\"primary\"className=\"button\" href=\"input-todo-list\">add TODO LIST</Button>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n            <TableCell  className=\"head\">User Id</TableCell>           \n              <TableCell  className=\"head\">Id</TableCell>\n              <TableCell  className=\"head\">Title</TableCell>\n              <TableCell  className=\"head\">Completed</TableCell>   \n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {todo.map(item => (\n            <TableRow>\n              <TableCell>{item.userId}</TableCell>\n              <TableCell>{item.id}</TableCell>\n              <TableCell>{item.title}</TableCell>\n              <TableCell>\n              <FormControlLabel\n        control={\n          <Switch\n            checked={item.completed}\n            onChange={handleChange}\n            name=\"checkedB\"\n            value={state.checkedB}\n            color=\"primary\"\n          />\n        }\n        label=\"Completed\"\n      />\n              </TableCell>\n            </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}